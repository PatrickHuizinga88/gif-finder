{"version":3,"sources":["img/logo_white.png","components/Navbar.js","components/Hero.js","components/Gif.js","components/Grid.js","components/Trending.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","categories","className","href","src","logo","alt","Hero","onPress","to","onClick","Gif","gif","embed","WhatsappShareButton","url","WhatsappIcon","size","Grid","gifs","map","images","fixed_height","embed_url","id","Trending","Search","passResult","useState","search","setSearch","lastInput","setLastInput","handleSubmit","event","a","preventDefault","axios","params","api_key","q","res","data","alert","type","placeholder","value","onChange","target","hidden","App","setGifs","setCategories","content","useRef","useEffect","limit","getGifs","getCategories","goToContent","window","scrollTo","top","current","offsetTop","behavior","setTimeout","document","getElementById","focus","ref","path","exact","component","render","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.792e404f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_white.0d787533.png\";","import logo from '../img/logo_white.png'\r\n\r\nconst Navbar = ({ categories }) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"container\">\r\n                <a className=\"logo-link\" href=\"/gif-finder/\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                </a>\r\n                <div className=\"menu-items\">\r\n                    <a className=\"item\" href=\"/gif-finder/\">Trending</a>\r\n                    {/* <div className=\"dropdown\">\r\n                        <p className=\"item\" href=\"#\">Categories</p>\r\n                        <div className=\"dropdown-content\">\r\n                            {categories.map((category) => (\r\n                                <a key={category.id} href=\"#\">{category.name}</a>\r\n                            ))}\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst Hero = ({onPress}) => {\r\n    \r\n    // const executeScroll = () => myRef.current.scrollIntoView()  \r\n\r\n\r\n    return (\r\n        <div className=\"hero\">\r\n            <h1>Find and share your favorite GIFs!</h1>\r\n            <Link \r\n                to=\"/gif-finder/search\" \r\n                className=\"btn\" \r\n                onClick={onPress}\r\n            >\r\n                Start searching\r\n            </Link>\r\n            <p>\r\n                Made in React by <a href=\"https://patrickhuizinga88.github.io\">Patrick Huizinga</a>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hero\r\n","import { TwitterIcon, TwitterShareButton, WhatsappShareButton } from \"react-share\"\r\nimport { WhatsappIcon } from \"react-share\"\r\n\r\nconst Gif = ({gif, embed}) => {\r\n    return (\r\n        <div className=\"gif-container\">\r\n            <img \r\n                className=\"gif\" \r\n                src={gif} \r\n                alt=\"gif\"\r\n            />\r\n            <div className=\"overlay\">\r\n                {/* <p>Share:</p> */}\r\n                <WhatsappShareButton url={embed}>\r\n                    <WhatsappIcon size={35} />\r\n                </WhatsappShareButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gif\r\n","import Gif from \"./Gif\"\r\n\r\nconst Grid = ({ gifs }) => {\r\n    return (\r\n        <div className=\"grid\">\r\n            {gifs.map((gif) => (\r\n                <Gif key={gif.id} gif={gif.images.fixed_height.url} embed={gif.embed_url}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid\r\n","const Trending = () => {\r\n    return (\r\n        <div className=\"header trending\">\r\n            <h1>Trending GIFs</h1>\r\n            {/* <div className=\"filter\">\r\n                <p>Filter:</p>\r\n                <select \r\n                // onChange={this.getFilteredGifs}\r\n                >\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"cat\">Cats</option>\r\n                    <option value=\"dog\">Dogs</option>\r\n                    <option value=\"monkey\">Monkeys</option>\r\n                </select>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trending\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Search = ({passResult}) => {\r\n\r\n    const [search, setSearch] = useState('')\r\n    const [lastInput, setLastInput] = useState('')\r\n\r\n    const handleSearchChange = event => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault()\r\n        if (search !== '') {\r\n            const res = await axios('https://api.giphy.com/v1/gifs/search', {\r\n                params: {\r\n                api_key: '8TjuxkKr5xAj9Dd1iNQIx0lWHamxD6n9',\r\n                q: search\r\n                }\r\n            });\r\n\r\n        passResult(res.data.data)\r\n        setLastInput(search)\r\n        }\r\n        else {\r\n            alert(\"Please fill in the input.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header search\">\r\n            <h1>Search GIFs</h1>\r\n            <form>\r\n                <input type=\"text\" id=\"search-input\" placeholder=\"Search...\" value={search} onChange={handleSearchChange}/>\r\n                <button type=\"submit\" onClick={handleSubmit} hidden/>\r\n            </form>\r\n            {lastInput !== '' ? <p> Showing results for: \"{lastInput}\"</p> : <br/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { useState, useEffect, useRef } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport axios from 'axios'\nimport './scss/main.scss'\nimport Navbar from './components/Navbar'\nimport Hero from './components/Hero'\nimport Grid from './components/Grid'\nimport Trending from './components/Trending';\nimport Search from './components/Search';\n\nfunction App() {\n  const [gifs, setGifs] = useState([])\n  const [categories, setCategories] = useState([])\n  const content = useRef(null)\n\n  useEffect(() => {\n    const getGifs = async () => {\n      const res = await axios('https://api.giphy.com/v1/gifs/trending', {\n        params: {\n          api_key: '8TjuxkKr5xAj9Dd1iNQIx0lWHamxD6n9',\n          limit: 50\n        }\n      });\n\n      setGifs(res.data.data)\n    }\n\n    getGifs()\n  }, [])\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const res = await axios('https://api.giphy.com/v1/gifs/categories', {\n        params: {\n          api_key: '8TjuxkKr5xAj9Dd1iNQIx0lWHamxD6n9',\n          limit: 50\n        }\n      });\n\n      setCategories(res.data.data)\n    }\n\n    getCategories()\n  }, [])\n  \n\n  // const getFilteredGifs = async (search) => {\n\n  //   const onSubmit = (e) => {\n  //     e.preventDefault()\n    \n  //     if (search != '') {\n  //       const res = await axios('https://api.giphy.com/v1/gifs/search', {\n  //         params: {\n  //           api_key: '8TjuxkKr5xAj9Dd1iNQIx0lWHamxD6n9',\n  //           q: search\n  //         }\n  //       });\n\n  //       console.log(res.data.data)\n  //       setGifs(res.data.data)\n  //     }\n  //     else {\n  //       alert(\"Please fill in the input.\")\n  //     }\n  //   }\n    \n  //   getFilteredGifs()\n  // }\n\n  // getFilteredGifs()\n\n  // const filterGifs = async () => {\n  //   const res = await axios('https://api.giphy.com/v1/gifs/search', {\n  //     params: {\n  //       api_key: '8TjuxkKr5xAj9Dd1iNQIx0lWHamxD6n9',\n  //       q: {filter}\n  //     }\n  //   });\n\n  //   setGifs(res.data.data)\n  // }\n\n  // filterGifs()\n\n\n  const goToContent = async () => {\n    window.scrollTo({\n        top: content.current.offsetTop - 65,\n        behavior: \"smooth\"\n    });\n    setTimeout(() => {\n      document.getElementById('search-input').focus()\n    }, 500);\n  }\n\n  return (\n    <>\n      <Navbar categories={categories}/>\n      {/* <button onClick={goToContent}>Go to content</button> */}\n      <div className=\"container\">\n        <Router>\n          <Hero onPress={goToContent}/>\n          <section id=\"content\" ref={content}>\n            <Route path=\"/gif-finder/\" exact component={Trending} />\n            <Route path=\"/gif-finder/search\" render={() => <Search passResult={setGifs} />} />\n          </section>\n        </Router>\n        {gifs.length > 0 ? (\n          <Grid gifs={gifs} />\n        ) : (\n          \"Unable to retrieve gifs.\"\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}